# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for Desktop Applications,
# refer to https://github.com/microsoft/github-actions-for-desktop-apps

name: MinecraftConsoleClient

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install .NET Core
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@2008f912f56e61277eefaac6d1888b750582aa16

    - name: Get Time
      id: time
      uses: nanzm/get-time-action@v1.0
      with:
        timeZone: 8
        format: 'YYYY-MM-DD-HH-mm-ss'

    - name: Add version information
      env:
        FULL_VERSION_NUMBER: '[assembly: AssemblyConfiguration("Github action build  ${{ github.action }} / ${{ github.run_id }} / ${{ github.run_number }}, built on ${{ steps.time.outputs.time }} from commit ${{ github.sha }}.")]'
      run: echo '${{ env.FULL_VERSION_NUMBER }}' >> ${{ github.workspace }}\MinecraftClient\Properties\AssemblyInfo.cs

    - name: show version information
      run: type ${{ github.workspace }}\MinecraftClient\Properties\AssemblyInfo.cs

    - name: Build MinecraftClient
      # msbuild MinecraftClient.sln /t:build /p:Configuration=Release /p:Platform="x86" /p:TargetFrameworkVersion="v4.0" /verbosity:minimal
      run: msbuild ${{ github.workspace }}\MinecraftClient.sln /t:build /p:Configuration=$env:Configuration /p:Platform="x86" /p:TargetFrameworkVersion="v4.0" /verbosity:minimal
      env:
        Configuration: ${{ matrix.configuration }}

    # Upload the artifacts: https://github.com/marketplace/actions/upload-artifact
    - name: Upload ${{ matrix.configuration }} artifact
      uses: actions/upload-artifact@v2
      with:
        name: MinecraftClient-${{ matrix.configuration }}
        path: MinecraftClient\bin\${{ matrix.configuration }}\MinecraftClient.exe
        if-no-files-found: error
